import "operating_system.poosl"
import "processing_unit.poosl"
import "storage_unit.poosl"
import "communication_unit.poosl"
import "energy_source.poosl"
import "platform_monitor.poosl"

cluster class NetworkOnChip(BandwidthPerConnection : Real, ConnectionSetUpLatency : Real, NetworkName : String,
	PowerPerCommunicatedByte : Real, PowerPerStoredByte : Real)
ports
	Power,
	Communications,
	Monitor
instances
	BufferMemory : StorageUnit(PowerPerByte := PowerPerStoredByte)
	RouterNetwork : CommunicationUnit(BandwidthPerConnection := BandwidthPerConnection, ConnectionSetUpLatency :=
		ConnectionSetUpLatency, NodeName := NetworkName, PowerPerByte := PowerPerCommunicatedByte)
channels
	{ BufferMemory.Access, RouterNetwork.Memory }
	{ Power, BufferMemory.Power, RouterNetwork.Power }
	{ Monitor, BufferMemory.Monitor, RouterNetwork.Monitor }
	{ Communications, RouterNetwork.Communications }

cluster class ProcessorNode(
		CommunicationBandwidth : Real,
		ConnectionSetUpLatency : Real,
		NodeName : String,
		OSPolicy : String,
		PowerPerCommunicatedByte : Real,
		PowerPerStoredByte : Real,
		ProcessorType : String,
		VoltageScaleFactor : Real)
ports
	Power,
	Communications,
	Computations,
	Monitor
instances
	InterConnect : CommunicationUnit(BandwidthPerConnection := CommunicationBandwidth, ConnectionSetUpLatency :=
		ConnectionSetUpLatency, NodeName := NodeName, PowerPerByte := PowerPerCommunicatedByte)
	DataMemory : StorageUnit(PowerPerByte := PowerPerStoredByte)
	BufferMemory : StorageUnit(PowerPerByte := PowerPerStoredByte)
	OperatingSystem : OperatingSystem(NodeName := NodeName, Policy := OSPolicy)
	Processor : ProcessingUnit(NodeName := NodeName, Type := ProcessorType, VoltageScaleFactor := VoltageScaleFactor)
channels
	{ OperatingSystem.Processor, Processor.OS }
	{ InterConnect.Memory, BufferMemory.Access }
	{ Processor.Memory, DataMemory.Access }
	{ Computations, OperatingSystem.Task }
	{ Communications, InterConnect.Communications }
	{ Power, InterConnect.Power, DataMemory.Power, BufferMemory.Power, Processor.Power }
	{ Monitor, InterConnect.Monitor, DataMemory.Monitor, BufferMemory.Monitor, Processor.Monitor }

cluster class Platform(
		NoC_BandwidthPerConnection : Real,
		NoC_ConnectionSetUpLatency : Real,
		Node_InternalBandwidth : Real,
		Node_InternalConnectionSetUpLatency : Real,
		PowerPerCommunicatedByte : Real,
		PowerPerStoredByte : Real)
ports
	SimulationController,
	CommunicationResources,
	ComputationResources
instances
	Node1 : ProcessorNode(CommunicationBandwidth := Node_InternalBandwidth, ConnectionSetUpLatency :=
		Node_InternalConnectionSetUpLatency, NodeName := "Node1", OSPolicy := "PB", PowerPerCommunicatedByte :=
		PowerPerCommunicatedByte, PowerPerStoredByte := PowerPerStoredByte, ProcessorType := "MIPS", VoltageScaleFactor
		:= 1.0 / 1.0)
	Node2 : ProcessorNode(CommunicationBandwidth := Node_InternalBandwidth, ConnectionSetUpLatency :=
		Node_InternalConnectionSetUpLatency, NodeName := "Node2", OSPolicy := "PB", PowerPerCommunicatedByte :=
		PowerPerCommunicatedByte, PowerPerStoredByte := PowerPerStoredByte, ProcessorType := "ARM", VoltageScaleFactor
		:= 1.0 / 1.0)
	Node3 : ProcessorNode(CommunicationBandwidth := Node_InternalBandwidth, ConnectionSetUpLatency :=
		Node_InternalConnectionSetUpLatency, NodeName := "Node3", OSPolicy := "PB", PowerPerCommunicatedByte :=
		PowerPerCommunicatedByte, PowerPerStoredByte := PowerPerStoredByte, ProcessorType := "TriMedia",
		VoltageScaleFactor := 1.0 / 1.0)
	Node4 : ProcessorNode(CommunicationBandwidth := Node_InternalBandwidth, ConnectionSetUpLatency :=
		Node_InternalConnectionSetUpLatency, NodeName := "Node4", OSPolicy := "PB", PowerPerCommunicatedByte :=
		PowerPerCommunicatedByte, PowerPerStoredByte := PowerPerStoredByte, ProcessorType := "MIPS", VoltageScaleFactor
		:= 1.0 / 1.0)
	NoC : NetworkOnChip(BandwidthPerConnection := NoC_BandwidthPerConnection, ConnectionSetUpLatency :=
		NoC_ConnectionSetUpLatency, NetworkName := "NoC", PowerPerCommunicatedByte := PowerPerCommunicatedByte,
		PowerPerStoredByte := PowerPerStoredByte)
	Battery : EnergySource()
	PlatformMonitor : PlatformMonitor()
channels
	{ Node1.Power, Node2.Power, Node3.Power, Node4.Power, NoC.Power, Battery.Power }
	{ Node1.Monitor, Node2.Monitor, Node3.Monitor, Node4.Monitor, NoC.Monitor, Battery.Monitor,
		PlatformMonitor.Monitor }
	{ ComputationResources, Node1.Computations, Node2.Computations, Node3.Computations, Node4.Computations }
	{ CommunicationResources, Node1.Communications, Node2.Communications, Node3.Communications, Node4.Communications,
		NoC.Communications }
	{ SimulationController, PlatformMonitor.SimulationController }