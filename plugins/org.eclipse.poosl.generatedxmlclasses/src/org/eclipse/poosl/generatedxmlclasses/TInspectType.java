//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.12.20 at 03:57:25 PM CET 
//

package org.eclipse.poosl.generatedxmlclasses;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for t_inspect_type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * <p>
 * 
 * <pre>
 * &lt;simpleType name="t_inspect_type"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="process"/&gt;
 *     &lt;enumeration value="cluster"/&gt;
 *     &lt;enumeration value="channel"/&gt;
 *     &lt;enumeration value="model"/&gt;
 *     &lt;enumeration value="system"/&gt;
 *     &lt;enumeration value="channel"/&gt;
 *     &lt;enumeration value="port"/&gt;
 *     &lt;enumeration value="variable"/&gt;
 *     &lt;enumeration value="data"/&gt;
 *     &lt;enumeration value="stackframe"/&gt;
 *     &lt;enumeration value="variable_context"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "t_inspect_type")
@XmlEnum
public enum TInspectType {

    @XmlEnumValue("process")
    PROCESS("process"), @XmlEnumValue("cluster")
    CLUSTER("cluster"), @XmlEnumValue("channel")
    CHANNEL("channel"), @XmlEnumValue("model")
    MODEL("model"), @XmlEnumValue("system")
    SYSTEM("system"), @XmlEnumValue("port")
    PORT("port"), @XmlEnumValue("variable")
    VARIABLE("variable"), @XmlEnumValue("data")
    DATA("data"), @XmlEnumValue("stackframe")
    STACKFRAME("stackframe"), @XmlEnumValue("variable_context")
    VARIABLE_CONTEXT("variable_context");

    private final String value;

    TInspectType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TInspectType fromValue(String v) {
        for (TInspectType c : TInspectType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
